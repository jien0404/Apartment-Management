openapi: 3.0.0
info:
  title: "Authentication API"
  description: "APIs for user authentication, including registration, login, forgot password, and password reset."
  version: "1.0.1"
servers:
  - url: http://localhost:5000
  - url: https://apartment-management-kjj9.onrender.com/
  - url: https://apartment-management-oy7f.onrender.com/
paths:
  /auth/register:
    post:
      summary: "Register a new user"
      description: "Registers a new user with a username, email, and password."
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: "john_doe"
                email:
                  type: string
                  example: "john@example.com"
                password:
                  type: string
                  example: "password123"
      responses:
        200:
          description: "Confirmation email sent"
        400:
          description: "Username or email already exists"
        500:
          description: "Failed to send confirmation email"

  /auth/confirm_email/{token}:
    get:
      summary: "Confirm user's email"
      description: "Confirms the user's email via the token received."
      parameters:
        - in: path
          name: token
          schema:
            type: string
          required: true
          description: "Email confirmation token"
      responses:
        200:
          description: "User registration successful"
        401:
          description: "Invalid or expired token"

  /auth/login:
    post:
      summary: "User login"
      description: "Allows a registered user to log in by providing username and password."
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: "john_doe"
                password:
                  type: string
                  example: "password123"
                remember:
                  type: boolean
                  example: false
      responses:
        200:
          description: "Login successful"
        403:
          description: "Login failed, check credentials"

  /auth/forgot-password/:
    post:
      summary: "Forgot password"
      description: "Sends a validation code to the user's email to reset the password."
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "john@example.com"
      responses:
        '200':
          description: Password reset email sent
        '404':
          description: No account registered with the provided email
  
  /auth/validation-code:
    post:
      summary: Try to validate the code
      requestBody:
        description: The code which requires checking
        required = true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                input_code:
                  type: string
      responses:
        '200':  
          description: validate successfully
        '400':
          description: invalid code 

  /auth/reset-password:
    post:
      summary: Update the password in database
      requestBody:
        description: The new password
        required = true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                new_password:
                  type: string
      responses:
        '200':  
          description: Password has been reset!!!
        

  /auth/logout:
    get:
      summary: "Logout"
      description: "Logs out the current user and clears the session."
      responses:
        200:
          description: "Logout successful"
