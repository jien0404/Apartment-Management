openapi: 3.0.0
info:
  title: "Authentication API"
  description: "APIs for user authentication, including registration, login, forgot password, and password reset."
  version: "1.0.1"
servers:
  - url: http://localhost:5000
  - url: https://apartment-management-kjj9.onrender.com/
  - url: https://apartment-management-oy7f.onrender.com/
paths:
  /auth/register:
    post:
      summary: "Register a new user"
      description: "Registers a new user with a username, email, and password."
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: "john_doe"
                email:
                  type: string
                  example: "john@example.com"
                password:
                  type: string
                  example: "password123"
      responses:
        200:
          description: "Confirmation email sent"
        400:
          description: "Username or email already exists"
        500:
          description: "Failed to send confirmation email"

  /auth/confirm_email/{token}:
    get:
      summary: "Confirm user's email"
      description: "Confirms the user's email via the token received."
      parameters:
        - in: path
          name: token
          schema:
            type: string
          required: true
          description: "Email confirmation token"
      responses:
        200:
          description: "User registration successful"
        401:
          description: "Invalid or expired token"

  /auth/login:
    post:
      summary: "User login"
      description: "Allows a registered user to log in by providing username and password."
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: "john_doe"
                password:
                  type: string
                  example: "password123"
                remember:
                  type: boolean
                  example: false
      responses:
        200:
          description: "Login successful"
        403:
          description: "Login failed, check credentials"

  /auth/forgot-password/:
    post:
      summary: "Forgot password"
      description: "Sends a validation code to the user's email to reset the password."
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "john@example.com"
      responses:
        200:
          description: Password reset email sent
        404:
          description: No account registered with the provided email
  
  /auth/validation-code:
    post:
      summary: Try to validate the code
      requestBody:
        description: The code which requires checking
        required = true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                input_code:
                  type: string
      responses:
        200:  
          description: validate successfully
        400:
          description: invalid code 

  /auth/reset-password:
    post:
      summary: Update the password in database
      requestBody:
        description: The new password
        required = true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                new_password:
                  type: string
      responses:
        200:  
          description: Password has been reset!!!
        

  /auth/logout:
    get:
      summary: "Logout"
      description: "Logs out the current user and clears the session."
      responses:
        200:
          description: "Logout successful"

  admin/residents:
    get:
      summary: Get all residents
      description: Retrieves a list of all residents with their information.
      parameters:
        - name: apartment_number
          in: path
          required: true
          description: The apartment number of the house.
          schema:
            type: integer
            example: 101
      responses:
        200:
          description: A list of residents
          content:
            application/json:
              schema:
                type: object
                properties:
                  resident_info:
                    type: array
                    items:
                      type: object
                      properties:
                        full_name:
                          type: string
                          example: Vũ Văn Hoàng
                        date_of_birth:
                          type: string
                          format: date
                          example: 1990-01-01
                        id_number:
                          type: string
                          example: ABC123456
                        age:
                          type: integer
                          example: 30
                        room:
                          type: integer
                          example: 101
                        phone_number:
                          type: string
                          example: 09436255193
                        status:
                          type: string
                          example: Thường trú
        500:
          description: Server error
  admin/house{apartment_number}:
    get:
      summary: House info
      description: Retrieve an apartment information
      responses:
        200:
          description: Info of the apartment
          content:
            application/json:
              schema:
                type: object
                properties:
                  info:
                    type: object
                    properties:
                      area:
                        type: number
                        format: float
                        example: 40.00
                      status:
                        type: string
                        example: occupied
                      owner:
                        type: string
                        example: Hoàng Ánh
                      num_residents:
                        type: interger
                        example: 5
                      phone_number:
                        type: string
                        example: 01684793145  
        404:
          description: House not found
        500:
          description: Server error
  admin/update{int:house_id}:
    post:
      summary: Update house
      parameters:
        - name: house_id
          in: path
          required: true
          description: The ID of the household to update.
          schema:
            type: integer
            example: 1
      requestBody:
        description: Update apartment information
        required = true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                phone_number:
                  type: string        
                  example: 0916243155
                num_residents:
                  type: interger
                  example: 5
        responses:
          200:
            description: Updated successfully
          404:
            description: House not found
          500:
            description: Server error
  admin/{household_id}/residents:
    get:
      tags:
        - Residents
      summary: Get residents of a household
      description: Retrieves the owner and residents of a household by the household ID.
      parameters:
        - name: household_id
          in: path
          required: true
          description: The ID of the household.
          schema:
            type: integer
            example: 1
      responses:
        200:
          description: List of residents in the household
          content:
            application/json:
              schema:
                type: object
                properties:
                  owner:
                    type: object
                    properties:
                      resident_id:
                        type: integer
                        example: 1
                      resident_name:
                        type: string
                        example: Nguyễn Quyết Thắng
                      date_of_birth:
                        type: string
                        format: date
                        example: 1985-08-15
                      id_number:
                        type: string
                        example: '002948492849'
                      phone_number:
                        type: string
                        example: '018276478727'
                      status:
                        type: string
                        example: Thường trú
                  info:
                    type: array
                    items:
                      type: object
                      properties:
                        resident_id:
                          type: integer
                          example: 2
                        resident_name:
                          type: string
                          example: Trần Thanh Phong
                        date_of_birth:
                          type: string
                          format: date
                          example: 1990-07-01
                        id_number:
                          type: string
                          example: '001204019225'
                        phone_number:
                          type: string
                          example: '0989233677'
                        status:
                          type: string
                          example: Thường trú
        404:
          description: Household or residents not found
        500:
          description: Internal server error
          

